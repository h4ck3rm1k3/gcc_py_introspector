function:
  body:
    bind:
      body:
      - [f, '=', '0']
      - - pwd
        - '='
        - call: {E0: '"PWD"', fn: null}
      - cond_expr:
          OP0: [pwd, ==, '0']
          OP1:
          - f
          - '='
          - - pwd
            - '='
            - call: {E0: '"eterm"', fn: null}
      - call: {E0: stderr, E1: '"&#xfffd;/%s"', E2: pwd, fn: null}
      - call: {E0: f, E1: '"../eval.c"', E2: '208', fn: null}
      vars: pwd
  link: static
  name: send_pwd_to_eterm
  srcp: eval.c:199

function:
  body:
    bind:
      body:
      - [need_here_doc, '=', '0']
      - call: {fn: null}
      - cond_expr:
          OP0:
            truth_andif_expr:
              OP0:
                ne_expr: {OP0: interactive, OP1: '0'}
              OP1:
                ne_expr:
                  OP0:
                    comp_ref: {OP0: bash_input, OP1: '[type]'}
                  OP1: '3'
          OP1:
          - - command_to_execute
            - '='
            - call: {E0: '"PROMPT_COMMAND"', fn: null}
          - cond_expr:
              OP0:
                ne_expr: {OP0: command_to_execute, OP1: '0'}
              OP1:
                call: {E0: command_to_execute, E1: '"PROMPT_COMMAND"', fn: null}
          - cond_expr:
              OP0: [running_under_emacs, ==, '2']
              OP1:
                call: {fn: Func(send_pwd_to_eterm)}
      - [current_command_line_count, '=', '0']
      - - r
        - '='
        - call: {fn: null}
      - cond_expr:
          OP0:
            ne_expr: {OP0: need_here_doc, OP1: '0'}
          OP1:
            call: {fn: null}
      - ret:
          expr: [return, '=', r]
      vars: r
  link: extern
  name: parse_command
  srcp: eval.c:216

